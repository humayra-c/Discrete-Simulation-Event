library(simmer)
library(simmer.plot)
library(gridExtra)
#########################
set.seed(1234)

ICU <-simmer()

bedsinICU <- 26 ##26 bedoccupancy -mean number of bed occupancy from nov 2021-Nov 2022
arrinICU <-2.66

Patient <-
  trajectory("PatientsinICU") %>%
  log_("BedOccupancyICU") %>%
  set_attribute("start_time", function() {now(ICU)}) %>%
  seize("bed") %>%
  log_(function() {paste("Waited: ", now(ICU) - get_attribute(ICU, "start_date"))}) %>%
  timeout(function() {rexp(1, 1/arrinICU)}) %>%  
  release("bed") %>%
  log_(function() {paste("Finished: ", now(ICU))})

ICU <-
  simmer("ICU") %>%
  add_resource("bed",32) %>%  #32beds in Tower
  add_resource("nurses",40) %>%  #Need to check Funded for 52 staff in ICU across all sites ?
  add_generator("Patient", Patient,function() rexp(1, 1/arrinICU)##

ICU %>% run(until = 400)  ##simulation runs for 400days
ICU %>% get_mon_arrivals()


ICU_monitor<-get_mon_arrivals(ICU) %>%
  transform(waiting_time = end_time - start_time - activity_time) 
  
mean_waiting_time <- mean(ICU_monitor$wait)
resource_monitor <- get_mon_resources(ICU)

queue_state <- head(resource_monitor$queue, -1)
server_state <- head(resource_monitor$server, -1)
time_state_lasted <- diff(resource_monitor$time)
time_at_end <- max(resource_monitor$time)

mean_active_customers <- sum(server_state * time_state_lasted) / time_at_end
mean_waiting_customers <- sum(queue_state * time_state_lasted) / time_at_end

cat(" Average waiting = ", mean_waiting_customers, "\n",
    "Average active  = ", mean_active_customers, "\n")


###############GRAPHS##############
##p1=plot(resources, metric = "utilisation")  #resource utilisation graph

##p2=plot(resources, metric = "usage", c("bed"),  ##resource usage
       ## items = c( "queue", "server"))
##arrivals <- get_mon_arrivals(ICU)

##p3=plot(arrivals, metric = "waiting_time")  ##Waiting time for a bed
##p4=plot(arrivals, metric = "activity_time")
##grid.arrange(p2,p3,p4)

ICU %>%
  get_mon_resources() %>%
  .[order(.$time),]

ICU %>%
  get_mon_arrivals %>%
  ggplot(aes(end_time - start_time)) +
  geom_histogram() +
  xlab("Days spent in ICU (Days)") +
  ylab("Number of patients")
## main("Number of Days Patient spent in ICU")

plot(ICU,
     what = "resources",
     metric = "usage",
     names = "bed",
     items = "system",
     steps = TRUE)

